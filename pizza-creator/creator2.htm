<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Pizza Creator</title>
  
  <link rel="stylesheet" type="text/css" href="app.css">
  <script src="app.js"></script>
  <script src="render/renderConfirmationModal.js"></script>
  <script src="render/renderSizes.js"></script>
  <script src="render/renderSummary.js"></script>
  <script src="render/renderToppings.js"></script>
  <script src="render/renderTotal.js"></script>
  <script src="render/renderForm.js"></script>


</head>
<body>
  <div class="confirmation-modal">
  </div>

  <div class="section">
    <h2>Enter Your Details</h2>
    <div class="details">
      
    </div>
  </div>
  <div class="section">
      <h2>Pick Your Pizza</h2>
      <div class="pizza-size">
        <!-- render Size() -->
      </div>
    </div>
  <div class="section">
    <h2>Pick Your Toppings</h2>
    <div class="toppings">
      <!-- renderToppings() -->
    </div>
  </div>
  <div class="section">
    <h2>Order Summary</h2>
    <ul class="summary">
    </ul>
    <hr>
    <div class="total" data-total="0">
      Total: $0
    </div>
  </div>
  <div class="section">
    <button type="submit">Place order</button>
    <button type="reset">Clear</button>
  </div>
<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function() {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					head.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					head.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function(msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			console.log('Live reload enabled.');
		})();
	}
	// ]]>
</script>
</body>
</html>